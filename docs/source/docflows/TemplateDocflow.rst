Документооборот шаблонов
========================

.. contents:: :local:


Шаблон — это предзаполненный документ, не имеющий юридической силы, который можно отправить контрагенту без подписи.

Сценарии использования шаблонов
-------------------------------

- Отпавителю документа неизвестно его содержимое, о нем знает только получатель. Получатель может подготовить шаблон документа, который ожидает получить.
- У получателя документа есть определенные требования к этому документу. Получатель может сам создать шаблон документа, удовлетворяющего этим требованиям.
- Получатель документов хочет уменьшить количество ошибок во входящих документах. Он может создать шаблон и отправить его контрагентам. Так получатель будет уверен, что получит от контрагентов документы без ошибок.
- Отправитель документа хочет показать документ получателю до его подписания.


Возможности и ограничения шаблонов
----------------------------------

- Из шаблона можно создать юридически значимый документ `любого типа <../http/GetDocumentTypes>`__.

- Шаблоны можно связать в пакет, в том числе в закрытый. Шаблоны из закрытого пакета могут быть обработаны только вместе. Документы, созданные из шаблонов в закрытом пакете, будут отправлены в пакете, состав которого изменить нельзя.

- Шаблоны могут быть одноразовыми и многоразовыми. На основе одноразового шаблона можно создать только один документ, на основе многоразового — неограниченное количество документов.

- В шаблоне можно указать настройки будущего документа: запрос подписи, данные о документе, `настройки редактирования <#id8>`__ и т.д.

- Вы можете отправлять шаблоны только после настройки вашей организации. Для настройки обратитесь к вашему менеджеру или в `техническую поддержку <https://www.diadoc.ru/support>`__.


Действия с шаблонами
--------------------


Отправка шаблона
~~~~~~~~~~~~~~~~

Отправить шаблон можно с помощью метода :doc:`../http/PostTemplate`.
В метод передается структура :doc:`../proto/TemplateToPost`, содержащая сведения об отправляемом шаблоне.

Организация, которая сможет создать документ из шаблона, указывается при отправке шаблона в поле ``MessageFromBoxId`` структуры :doc:`../proto/TemplateToPost`.
Ниже перечислены примеры заполнения значений ящиков в структуре :doc:`../proto/TemplateToPost` в зависимости от схемы использования шаблона.


Схемы использования шаблонов
""""""""""""""""""""""""""""

**1. Документ готовит получатель**

 В этой схеме получатель документа подготавливает его за отправителя.

 1. Организация *boxId1* создает шаблон и отправляет его организации *boxId2*.
 2. Организация *boxId2* получает шаблон, создает из него документ и отправляет его организации *boxId1*.
 3. Организация *boxId1*, которая отправила шаблон, получает от организации *boxId2* входящий документ, созданный из этого шаблона.

 .. image:: ../_static/img/template_dockflow_schema1.png
	:align: center

 Чтобы отправить документ по этой схеме, идентификаторы ящиков в структуре :doc:`../proto/TemplateToPost` нужно заполнить так:
 ::

	"FromBoxId": "boxId1",
	"ToBoxId": "boxId2",
	"MessageFromBoxId": "boxId2",
	"MessageToBoxId": "boxId1"

	
**2. Предварительный просмотр документа**

 В этой схеме шаблон используется для предварительного просмотра документа будущим получателем.

 1. Организация *boxId1* создает шаблон и отправляет его организации *boxId2*.
 2. Организация *boxId2* получает шаблон и знакомится с его содержимым.
 3. Организация *boxId1*, которая создала шаблон, теперь создает документ из этого шаблона и отправляет его организации *boxId2*.
 4. Организация *boxId2* получает документ, созданный из шаблона, с которым ознакомилась ранее.

 .. image:: ../_static/img/template_dockflow_schema2.png
	:align: center

 Чтобы отправить документ по этой схеме, идентификаторы ящиков в структуре :doc:`../proto/TemplateToPost` нужно заполнить так:
 ::

	"FromBoxId": "boxId1",
	"ToBoxId": "boxId2",
	"MessageFromBoxId": "boxId1",
	"MessageToBoxId": "boxId2"

	
**3. Документ готовит третья сторона**

 В этой схеме документ подготавливает сторона, не участвующая в юридически значимом документообороте. Получатель документа не имеет доступа к шаблону. Шаблон согласовывают между собой две организации, документ получает третья организация.

 1. Организация *boxId1* создает шаблон и отправляет ее организации *boxId2*.
 2. Организация *boxId2* получает шаблон, создает из него документ и отправляет его организации *boxId3*.
 3. Организация *boxId3* получает документ, но не имеет доступа к шаблону, из которого он был создан.

 .. image:: ../_static/img/template_dockflow_schema3.png
	:align: center

 Чтобы отправить документ по этой схеме, идентификаторы ящиков в структуре :doc:`../proto/TemplateToPost` нужно заполнить так:
 ::

	"FromBoxId": "boxId1",
	"ToBoxId": "boxId2",
	"MessageFromBoxId": "boxId2",
	"MessageToBoxId": "boxId3"


Структура :doc:`../proto/TemplateToPost` содержит список документов :doc:`../proto/TemplateDocumentAttachment`, которые отправляются в шаблоне.

Получатель шаблона может `отклонить документ из шаблона <#id11>`__. Чтобы запретить отклонение, установите значение свойства ``RefusalDisabled = true`` структуре :doc:`../proto/TemplateDocumentAttachment`.

Чтобы создать многоразовый шаблон, установите значение свойства ``IsReusable = true`` в структуре :doc:`../proto/TemplateToPost`.


Настройки редактирования
""""""""""""""""""""""""

Шаблон формализованного документа можно отправить с незаполненными обязательными полями, например, без указания номера документа. Для этого используются настройки редактирования.

Настройка редактирования задает правила, которые «ослабляют» требования к документу и позволяют отправить в шаблоне документ с незаполненными полями. Документ из такого **редактируемого шаблона** нужно будет дозаполнить перед отправкой.

.. important::
	Параметры, которые требуется дозаполнить, должны полностью отсутствовать в отправляемом XML.

В Диадоке доступна отправка редактируемых шаблонов для следующих типов документов и настроек:

- УПД (все функции) — можно редактировать номер документа;
- УПД (все функции) — можно редактировать номер и дату документа;
- СФ — можно редактировать номер документа;
- СФ — можно редактировать номер и дату документа;
- Поручение экспедитору — набор редактируемых параметров (данные водителя);
- Сведения о расходе электроэнергии — набор редактируемых значений показаний счетчиков электроэнергии.

Чтобы создать редактируемый шаблон, укажите в поле ``EditingSettingId`` структуры :doc:`../proto/TemplateDocumentAttachment` значение идентификатора настройки редактирования.

Для получения идентификатора настройки редактирования обратитесь к вашему менеджеру или в `техническую поддержку <https://www.diadoc.ru/support>`__.

	
Получение шаблонов и событий
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Получить шаблон по идентификаторам можно с помощью метода :doc:`../http/GetMessage`.

Получить события по шаблонам можно с помощью методов:

- :doc:`../http/GetNewEvents`
- :doc:`../http/GetDocflows_V3`
- :doc:`../http/GetMessage`


Создание документа из шаблона
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Создать документ из шаблона можно с помощью метода :doc:`../http/TransformTemplateToMessage`.

.. important::
	Создать документ может только организация, ящик которой указан в поле ``MessageFromBoxId`` структуры :doc:`../proto/TemplateToPost` при отправке шаблона.

Созданный документ можно найти среди исходящих неподписанных документов.

Узнать, из какого шаблона был создан документ, можно с помощью свойства :doc:`../proto/Origin` в структуре :doc:`../proto/Document`.

Если документ был отправлен с `настройкой редактирования <#id8>`__, то созданный документ необходимо дозаполнить. Чтобы заполнить документ, отправьте `патч <../proto/MessagePatchToPost>`__ c типом ``EditingPatches``. Методы для получения настроек заполнения пока недоступны.

Нельзя массово подписать и отправить документы, созданные из шаблонов с `настройками редактирования <#id8>`__.


Отклонение и отзыв шаблона
~~~~~~~~~~~~~~~~~~~~~~~~~~

Организация может отклонить шаблон, если она не согласна с шаблоном и не готова формировать и подписывать документ из этого шаблона.

Отклонить входящий шаблон можно с помощью метода :doc:`../http/PostTemplatePatch`, если отклонение не запрещено отправителем шаблона.

Отозвать исходящий шаблон можно с помощью метода :doc:`../http/PostTemplatePatch`. После отзыва получатель шаблона не сможет создать документ из шаблона, отклонить шаблон или отправить документы, созданные из шаблона до его отзыва.


Другие действия
~~~~~~~~~~~~~~~

- Удаление шаблона — метод :doc:`../http/Delete`.
- Восстановление шаблона — метод :doc:`../http/Restore`.
- Перемещение шаблонов — метод :doc:`../http/MoveDocuments`.

Все остальные действия для шаблонов недоступны.
