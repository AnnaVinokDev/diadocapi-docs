GetNewEvents
============

Метод для получения ленты событий в ящике.

.. http:get:: /V7/GetNewEvents

    :queryparam boxId: идентификатор ящика.
    :queryparam afterEventId: идентификатор последнего полученного события. Не может быть задан одновременно с ``afterIndexKey``. Необязательный параметр.
    :queryparam afterIndexKey: ключ события, используемый для постраничной выгрузки. Не может быть задан одновременно с ``afterEventID``. Необязательный параметр.
    :queryparam departmentId: идентификатор подразделения, из которого производится выборка документов.
    :queryparam messageType: тип сообщения: ``Draft``, ``Letter``, ``Template``. Можно указать несколько типов через запятую. Необязательный параметр.
    :queryparam typeNamedId: строковый идентификатор типа документа. Можно указать несколько идентификаторов через запятую. Необязательный параметр.
    :queryparam documentDirection: направление документа относительно текущего ящика. Может принимать значения: ``Inbound``, ``Outbound``, ``Internal``. Можно указать несколько направлений через запятую. Необязательный параметр.
    :queryparam timestampFromTicks: метка времени, задающая начальную точку периода. Задается целое число тиков, прошедших с момента времени 00:00:00 01.01.0001. Необязательный параметр.
    :queryparam timestampToTicks: метка времени, задающая конечную точку периода. Задается целое число тиков, прошедших с момента времени 00:00:00 01.01.0001. Необязательный параметр.
    :queryparam counteragentBoxId: идентификатор ящика контрагента. Необязательный параметр.
    :queryparam orderBy: порядок сортировки документов в выдаче по времени возникновения события. Может принимать значения: ``Ascending``, ``Descending``. Необязательный параметр. По умолчанию имеет значение ``Ascending``.
    :queryparam limit: максимальное количество документов в ответе. Может принимать значение от 1 до 100. Необязательный параметр. По умолчанию имеет значение 100.

    :requestheader Authorization: данные, необходимые для :doc:`авторизации <../Authorization>`.

    :statuscode 200: операция успешно завершена.
    :statuscode 400: данные в запросе имеют неверный формат или отсутствуют обязательные параметры.
    :statuscode 401: в запросе отсутствует HTTP-заголовок ``Authorization``, или в этом заголовке отсутствует параметр ``ddauth_api_client_id``, или переданный в нем ключ разработчика не зарегистрирован в Диадоке.
    :statuscode 402: у организации с указанным идентификатором ``boxId`` закончилась подписка на API.
    :statuscode 403: доступ к ящику с предоставленным авторизационным токеном запрещен.
    :statuscode 405: используется неподходящий HTTP-метод.
    :statuscode 500: при обработке запроса возникла непредвиденная ошибка.

    :response Body: В теле ответа содержится список событий в ящике ``boxId``, следующих за событием с идентификатором ``afterEventId`` или ``afterIndexKey`` в хронологическом порядке. 

Параметр ``departmentID`` может отсутствовать, если у пользователя есть доступ ко всем документам организации. Параметр является обязательным, если доступ ограничен. В этом случае укажите подразделение, к документам которого у пользователя есть доступ 

Подразделение организации, в котором состоит пользователь, можно найти в структуре :doc:`../proto/OrganizationUserPermissions` в поле ``UserDepartmentId``. Уровень доступа возвращается в поле ``DocumentAccessLevel``.

Если задан параметр ``departmentId``, метод вернет события только по указанному подразделению.

Все события по черновикам доступны пользователям, у которых есть доступ ко всем документам организации.

.. important::
    К подразделению организации привязываются все события, произошедшие с 15.03.2017. События, произошедшие до 15.03.2017, может получить только пользователь, который имеет доступ ко всем документам организации.


Список событий в теле ответа возвращается в виде сериализованной структуры данных :doc:`../proto/BoxEventList`. Событие с идентификатором ``afterEventId`` или ``afterIndexKey`` в список не включается. 

В структуру данных не сохраняется содержимое документов, ассоциированных с событиями из списка. Возвращается только метаинформация об изменениях в ящике. Это гарантирует, что ответ на запрос имеет предсказуемый и небольшой размер.

Если список изменений содержит более 100 элементов, то в ответе возвращаются первые 100 событий, а поле ``BoxEventList.TotalCount`` содержит общее количество событий, удовлетворяющих параметрам запроса. Поле ``BoxEventList.TotalCountType`` указывает, точно ли посчитано значение ``TotalCount`` или подсчет был ограничен. Если параметры ``afterEventId`` или ``afterIndexKey`` отсутствуют в запросе, то метод возвращает самые старые события из ящика ``boxId``.

Интеграционное решение будет помнить идентификатор последнего прочитанного события ``BoxEvent.EventId`` для конкретного ящика. Этот метод позволяет интеграционному решению узнать, какие изменения произошли в ящике с момента последнего подключения интеграционного решения к Диадоку.
