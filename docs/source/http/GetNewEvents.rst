GetNewEvents
============

Метод ``GetNewEvents`` возвращает ленту событий в ящике.

.. http:get:: /V7/GetNewEvents

	:queryparam boxId: идентификатор ящика организации.
	:queryparam afterEventId: идентификатор последнего полученного события. Нельзя указывать одновременно с ``afterIndexKey``. Необязательный параметр.
	:queryparam afterIndexKey: ключ события, используемый для постраничного получения событий. Нельзя указывать одновременно с ``afterEventID``. Необязательный параметр.
	:queryparam departmentId: идентификатор подразделения, из которого производится выборка документов.
	:queryparam messageType: тип cообщения. Можно указать несколько типов через запятую. Необязательный параметр. Принимает значения из перечисления:

		- ``Draft`` — черновик,
		- ``Letter`` — письмо,
		- ``Template`` — шаблон. 

	:queryparam typeNamedId: строковый идентификатор типа документа. Доступные типы можно получить с помощью метода :doc:`GetDocumentTypes`. Можно указать несколько идентификаторов через запятую. Необязательный параметр.
	:queryparam documentDirection: направление документа относительно текущего ящика. Можно указать несколько направлений через запятую. Необязательный параметр. Принимает значения из перечисления:
	
		- ``Inbound`` — входящие,
		- ``Outbound`` — исходящие,
		- ``Internal`` — внутренние.

	:queryparam timestampFromTicks: метка времени, задающая начальную точку периода. Задается целое число тиков, прошедших с момента времени 00:00:00 01.01.0001. Необязательный параметр.
	:queryparam timestampToTicks: метка времени, задающая конечную точку периода. Задается целое число тиков, прошедших с момента времени 00:00:00 01.01.0001. Необязательный параметр.
	:queryparam counteragentBoxId: идентификатор ящика контрагента. Необязательный параметр.
	:queryparam orderBy: порядок сортировки документов в выдаче по времени возникновения события. Может принимать значения: ``Ascending``, ``Descending``. Необязательный параметр. По умолчанию имеет значение ``Ascending``.
	:queryparam limit: максимальное количество документов в ответе. Может принимать значение от 1 до 100. Необязательный параметр. По умолчанию имеет значение 100.

	:requestheader Authorization: данные, необходимые для :doc:`авторизации <../Authorization>`.

	:statuscode 200: операция успешно завершена.
	:statuscode 400: данные в запросе имеют неверный формат или отсутствуют обязательные параметры.
	:statuscode 401: в запросе отсутствует HTTP-заголовок ``Authorization`` или в этом заголовке содержатся некорректные авторизационные данные.
	:statuscode 402: у организации с указанным идентификатором ``boxId`` закончилась подписка на API.
	:statuscode 403: доступ к ящику с предоставленным авторизационным токеном запрещен.
	:statuscode 405: используется неподходящий HTTP-метод.
	:statuscode 500: при обработке запроса возникла непредвиденная ошибка.

	:response Body: Тело ответа содержит список событий в ящике ``boxId``, следующих за событием с идентификатором ``afterEventId`` или ``afterIndexKey`` в хронологическом порядке. 

Если у пользователя есть доступ ко всем документам организации, параметр ``departmentID`` может отсутствовать. Параметр является обязательным, если доступ ограничен. В этом случае укажите подразделение, к документам которого у пользователя есть доступ.

Подразделение можно найти в поле ``UserDepartmentId`` структуры :doc:`../proto/OrganizationUserPermissions`. Уровень доступа возвращается в поле ``DocumentAccessLevel``.

Если задан параметр ``departmentId``, метод вернет события только по указанному подразделению.

.. important::
	К подразделению организации привязываются все события, произошедшие с 15.03.2017. События, произошедшие до этой даты, может получить только пользователь, который имеет доступ ко всем документам организации.

Если у пользователя есть доступ ко всем документам организации, в ленту попадут события по всему ящику. Доступ пользователя можно увидеть в поле ``AllDocuments`` структуры :doc:`../proto/DocumentAccessLevel`.

События по черновикам доступны пользователям, у которых есть доступ ко всем документам организации, так как черновики не имеют привязки к подразделению.

Список событий в теле ответа возвращается в виде структуры :doc:`../proto/BoxEventList`. 

Список ``BoxEventList.Events`` может содержать не более 100 элементов. Чтобы получить остальные элементы, вызовите метод GetNewEvents с теми же параметрами и с указанием ``AfterIndexKey``. В зависимости от значения параметра ``AfterIndexKey`` метод работает следующим образом:

	- Если в запросе отсутствует параметр ``AfterIndexKey``, то метод вернет начало списка событий, удовлетворяющих фильтру.
	- Если в запросе указан параметр ``AfterIndexKey``, то возвращенный список начнется с события, следующего за событием с ключом ``AfterIndexKey``; событие с ключом ``AfterIndexKey`` в этот список не попадает.

Если список изменений содержит более 100 элементов, то в ответе возвращаются первые 100 событий, а поле ``BoxEventList.TotalCount`` содержит общее количество событий, удовлетворяющих параметрам запроса. Поле ``BoxEventList.TotalCountType`` указывает, точно ли посчитано значение ``TotalCount`` или подсчет был ограничен. Если параметры ``afterEventId`` или ``afterIndexKey`` отсутствуют в запросе, то метод возвращает самые старые события из ящика ``boxId``.

В структуру данных не сохраняется содержимое документов, ассоциированных с событиями из списка. Возвращается только метаинформация об изменениях в ящике. Это гарантирует, что ответ на запрос имеет предсказуемый и небольшой размер.

Предполагается, что интеграционное решение будет помнить идентификатор последнего прочитанного события ``BoxEvent.EventId`` для конкретного ящика. Этот метод позволяет интеграционному решению узнать, какие изменения произошли в ящике с момента последнего подключения интеграционного решения к Диадоку.
